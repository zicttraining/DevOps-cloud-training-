name: AWS Terraform CI/CD

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:
    inputs:
      deploy_to_production:
        description: 'Deploy to Production?'
        required: false
        default: 'false'
        type: choice
        options: [false, true]
      destroy:
        description: 'Destroy infrastructure?'
        required: false
        default: 'false'
        type: choice
        options: [false, true]
      environment:
        description: 'Which environment to destroy or deploy?'
        required: true
        default: 'prod'
        type: choice
        options: [dev, uat, prod]

jobs:
  deploy-dev:
    name: Deploy to Dev
    if: github.ref != 'refs/heads/main' && github.event.inputs.destroy != 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Dev
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials (Dev)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  deploy-uat:
    name: Deploy to UAT
    if: github.ref != 'refs/heads/main' && github.event.inputs.destroy != 'true'
    runs-on: ubuntu-latest
    needs: deploy-dev
    defaults:
      run:
        working-directory: UAT
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials (UAT)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_UAT }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_UAT }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  deploy-prod:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main' && github.event.inputs.deploy_to_production == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Prod
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials (Prod)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  destroy:
    name: Destroy Infrastructure
    if: github.event.inputs.destroy == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.event.inputs.environment == 'dev' && 'Dev' || github.event.inputs.environment == 'uat' && 'UAT' || 'Prod' }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ github.event.inputs.environment == 'dev' && secrets.AWS_ACCESS_KEY_ID_DEV || github.event.inputs.environment == 'uat' && secrets.AWS_ACCESS_KEY_ID_UAT || secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ github.event.inputs.environment == 'dev' && secrets.AWS_SECRET_ACCESS_KEY_DEV || github.event.inputs.environment == 'uat' && secrets.AWS_SECRET_ACCESS_KEY_UAT || secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
